// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Status {
  ACTIVE
  PAUSED
  ENDED
}

enum Category {
  EDUCATION
  HEALTH
  ENVIRONMENT
  TECHNOLOGY
  ARTS
}

model User {
  id        String     @id @default(uuid())
  f_name    String
  l_name    String
  email     String     @unique
  password  String
  gender    Gender
  avatar    String?
  bio       String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Campaign  Campaign[]
  Donation  Donation[]

  @@unique([id, email])
}

model Campaign {
  id            String     @id @default(uuid())
  name          String
  description   String
  goal          Float
  status        Status
  category      Category
  currentAmount Float      @default(0)
  startDate     DateTime
  endDate       DateTime
  author        User       @relation(fields: [userId], references: [id])
  userId        String
  donations     Donation[]
  paypalEmail   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Donation {
  id           String   @id @default(uuid())
  amout        Float
  campaign     Campaign @relation(fields: [campaignId], references: [id])
  campaignId   String
  author       User     @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime @default(now())
  seenByAuthor Boolean  @default(false)
}
